select *
from EMPLOYEES;

select *
from DEPARTMENTS;

select 107*27
from dual;


select *
from EMPLOYEES
  inner join  DEPARTMENTS
on (EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID);



select A.FIRST_NAME,
       A.LAST_NAME,
       A.SALARY,
       B.DEPARTMENT_NAME
from EMPLOYEES A
  inner join  DEPARTMENTS B
on (A.DEPARTMENT_ID = B.DEPARTMENT_ID);

--Inner join utilizando producto cartesiano
select A.FIRST_NAME,
       A.LAST_NAME,
       A.SALARY,
       B.DEPARTMENT_NAME
from  EMPLOYEES A,
      DEPARTMENTS B
where A.DEPARTMENT_ID = B.DEPARTMENT_ID;

--Se utiliza en tablas que tienen una relación y que los campos que hacen la relación se llamen igual.
select A.FIRST_NAME,
       A.LAST_NAME,
       A.SALARY,
       B.DEPARTMENT_NAME
from EMPLOYEES A
  natural join  DEPARTMENTS B;


SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, DEPARTMENT_ID
FROM EMPLOYEES;



--Mostrar tooooodos los empleados, con o sin departamento
select A.FIRST_NAME,
       A.LAST_NAME,
       A.SALARY,
       nvl(B.DEPARTMENT_NAME,'Sin Departamento') as DEPARTMENT_NAME
from EMPLOYEES A
  left join  DEPARTMENTS B
on (A.DEPARTMENT_ID = B.DEPARTMENT_ID);

--Left join con producto cartesiano
  select A.FIRST_NAME,
       A.LAST_NAME,
       A.SALARY,
       B.DEPARTMENT_NAME
from  EMPLOYEES A,
      DEPARTMENTS B
where A.DEPARTMENT_ID = B.DEPARTMENT_ID(+);



--Mostrar los empleados con departamento y los departamentos que no tienen empleados

select A.FIRST_NAME,
       A.LAST_NAME,
       A.SALARY,
       b.DEPARTMENT_NAME
from EMPLOYEES A
  right join  DEPARTMENTS B
on (A.DEPARTMENT_ID = B.DEPARTMENT_ID);
--Right join con productos cartesianos

 select A.FIRST_NAME,
       A.LAST_NAME,
       A.SALARY,
       B.DEPARTMENT_NAME
from  EMPLOYEES A,
      DEPARTMENTS B
where A.DEPARTMENT_ID(+) = B.DEPARTMENT_ID;


--Mostrar todos los empleados con o sin departamento y todos los departamentos con o sin empleados
select A.FIRST_NAME,
       A.LAST_NAME,
       A.SALARY,
       b.DEPARTMENT_NAME
from EMPLOYEES A
  full outer join  DEPARTMENTS B
on (A.DEPARTMENT_ID = B.DEPARTMENT_ID);

--Empleados sin departamento

select A.FIRST_NAME,
       A.LAST_NAME,
       A.SALARY,
       nvl(B.DEPARTMENT_NAME,'Sin Departamento') as DEPARTMENT_NAME
from EMPLOYEES A
  left join  DEPARTMENTS B
on (A.DEPARTMENT_ID = B.DEPARTMENT_ID)
where b.DEPARTMENT_ID is null;

--Departamentos sin empleados

select A.FIRST_NAME,
       A.LAST_NAME,
       A.SALARY,
       b.DEPARTMENT_NAME
from EMPLOYEES A
  right join  DEPARTMENTS B
on (A.DEPARTMENT_ID = B.DEPARTMENT_ID)
where a.DEPARTMENT_ID is null;

--Empleados sin departamentos y departamentos sin empleados
select A.FIRST_NAME,
       A.LAST_NAME,
       A.SALARY,
       b.DEPARTMENT_NAME
from EMPLOYEES A
  full outer join  DEPARTMENTS B
on (A.DEPARTMENT_ID = B.DEPARTMENT_ID)
where a.DEPARTMENT_ID is null or
      b.DEPARTMENT_ID is null;


select A.FIRST_NAME,
       A.LAST_NAME,
       A.SALARY,
       B.DEPARTMENT_NAME
from  EMPLOYEES A,
      DEPARTMENTS B
where A.DEPARTMENT_ID(+) = B.DEPARTMENT_ID
union
select A.FIRST_NAME,
       A.LAST_NAME,
       A.SALARY,
       B.DEPARTMENT_NAME
from  EMPLOYEES A,
      DEPARTMENTS B
where A.DEPARTMENT_ID = B.DEPARTMENT_ID(+);


--crear vista normal
create or replace view vw_empleados as
SELECT A.EMPLOYEE_ID,
      A.FIRST_NAME||' '||A.LAST_NAME AS NAME,
      --A.JOB_ID,
      B.JOB_TITLE,
      --A.DEPARTMENT_ID,
      C.DEPARTMENT_NAME,
       C.LOCATION_ID,
       F.CITY,
       F.COUNTRY_ID,
       G.COUNTRY_NAME,
       G.REGION_ID,
       H.REGION_NAME,
       D.FIRST_NAME||' '||D.LAST_NAME AS MANAGER_NAME,
       E.FIRST_NAME||' '||E.LAST_NAME AS MANAGER_OF_MANAGER_NAME,
       a.SALARY

FROM EMPLOYEES A
INNER JOIN JOBS B
ON (A.JOB_ID = B.JOB_ID)
LEFT JOIN DEPARTMENTS C
on A.DEPARTMENT_ID = C.DEPARTMENT_ID
LEFT JOIN EMPLOYEES D
ON (D.EMPLOYEE_ID = A.MANAGER_ID)
LEFT JOIN EMPLOYEES E
ON (D.MANAGER_ID = E.EMPLOYEE_ID)
LEFT JOIN LOCATIONS F
ON (C.LOCATION_ID = F.LOCATION_ID)
LEFT JOIN COUNTRIES G
ON (F.COUNTRY_ID = G.COUNTRY_ID)
LEFT JOIN REGIONS H
ON (G.REGION_ID = H.REGION_ID);


create materialized view mvw_empleados as
SELECT A.EMPLOYEE_ID,
      A.FIRST_NAME||' '||A.LAST_NAME AS NAME,
      --A.JOB_ID,
      B.JOB_TITLE,
      --A.DEPARTMENT_ID,
      C.DEPARTMENT_NAME,
       C.LOCATION_ID,
       F.CITY,
       F.COUNTRY_ID,
       G.COUNTRY_NAME,
       G.REGION_ID,
       H.REGION_NAME,
       D.FIRST_NAME||' '||D.LAST_NAME AS MANAGER_NAME,
       E.FIRST_NAME||' '||E.LAST_NAME AS MANAGER_OF_MANAGER_NAME

FROM EMPLOYEES A
INNER JOIN JOBS B
ON (A.JOB_ID = B.JOB_ID)
LEFT JOIN DEPARTMENTS C
on A.DEPARTMENT_ID = C.DEPARTMENT_ID
LEFT JOIN EMPLOYEES D
ON (D.EMPLOYEE_ID = A.MANAGER_ID)
LEFT JOIN EMPLOYEES E
ON (D.MANAGER_ID = E.EMPLOYEE_ID)
LEFT JOIN LOCATIONS F
ON (C.LOCATION_ID = F.LOCATION_ID)
LEFT JOIN COUNTRIES G
ON (F.COUNTRY_ID = G.COUNTRY_ID)
LEFT JOIN REGIONS H
ON (G.REGION_ID = H.REGION_ID);



select *
from mvw_empleados;
--Actualizar una vista materializada
begin
  DBMS_MVIEW.REFRESH ('mvw_empleados');
end;


--Mismo resultado con productos cartesianos y el operador(+)
SELECT A.EMPLOYEE_ID,
      A.FIRST_NAME||' '||A.LAST_NAME AS NAME,
      --A.JOB_ID,
      B.JOB_TITLE,
      --A.DEPARTMENT_ID,
      C.DEPARTMENT_NAME,
       C.LOCATION_ID,
       F.CITY,
       F.COUNTRY_ID,
       G.COUNTRY_NAME,
       G.REGION_ID,
       H.REGION_NAME,
      A.MANAGER_ID,
       D.FIRST_NAME||' '||D.LAST_NAME AS MANAGER_NAME,
       D.MANAGER_ID,
       E.EMPLOYEE_ID,
       E.FIRST_NAME||' '||E.LAST_NAME AS MANAGER_OF_MANAGER_NAME
FROM  EMPLOYEES A,
      JOBS B,
      DEPARTMENTS C,
      EMPLOYEES D,
      EMPLOYEES E,
      LOCATIONS F,
      COUNTRIES G,
      REGIONS H
where A.JOB_ID = B.JOB_ID
and   A.DEPARTMENT_ID = C.DEPARTMENT_ID(+)
and   A.MANAGER_ID = D.EMPLOYEE_ID(+)
and   D.MANAGER_ID = E.EMPLOYEE_ID(+)
and   C.LOCATION_ID = F.LOCATION_ID(+)
and   F.COUNTRY_ID = G.COUNTRY_ID(+)
and   G.REGION_ID = H.REGION_ID(+);



SELECT A.FIRST_NAME, B.DEPARTMENT_NAME
FROM EMPLOYEES A
LEFT JOIN DEPARTMENTS B
ON (A.DEPARTMENT_ID = B.DEPARTMENT_ID);


SELECT A.FIRST_NAME, B.DEPARTMENT_NAME
FROM EMPLOYEES A,
     DEPARTMENTS B
WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID(+);



select  *
from vw_empleados;











select count(*)
from employees;


SELECT B.DEPARTMENT_NAME,
        count(*) AS CANTIDAD_EMPLEADOS,
       SUM(SALARY) AS SALARIO_TOTAL
FROM EMPLOYEES A
LEFT JOIN DEPARTMENTS B
ON (A.DEPARTMENT_ID = B.DEPARTMENT_ID)
GROUP BY B.DEPARTMENT_NAME
ORDER BY CANTIDAD_EMPLEADOS;


SELECT B.DEPARTMENT_NAME, SUM(SALARY) AS SALARIO_TOTAL
FROM EMPLOYEES A
LEFT JOIN DEPARTMENTS B
ON (A.DEPARTMENT_ID = B.DEPARTMENT_ID)
GROUP BY B.DEPARTMENT_NAME
ORDER BY SALARIO_TOTAL;



--cantidad de empleados por pais
SELECT D.COUNTRY_NAME,
      count(*) AS CANTIDAD_EMPLEADOS
FROM EMPLOYEES A
LEFT JOIN DEPARTMENTS B
ON (A.DEPARTMENT_ID = B.DEPARTMENT_ID)
LEFT JOIN LOCATIONS C
ON (B.LOCATION_ID = C.LOCATION_ID)
LEFT JOIN COUNTRIES D
ON (C.COUNTRY_ID = D.COUNTRY_ID)
GROUP BY D.COUNTRY_NAME
ORDER BY CANTIDAD_EMPLEADOS;




--MOSTRAR DEPARTAMENTOS EN LOS CUALES EL SALARIO TOTAL
--SEA MAYOR QUE 10000
SELECT B.DEPARTMENT_NAME, SUM(SALARY) AS SALARIO_TOTAL
FROM EMPLOYEES A
LEFT JOIN DEPARTMENTS B
ON (A.DEPARTMENT_ID = B.DEPARTMENT_ID)
GROUP BY B.DEPARTMENT_NAME
HAVING SUM(SALARY) > 10000
      AND B.DEPARTMENT_NAME IN (
        'Purchasing','IT',
        'Finance', 'Executive')
ORDER BY SALARIO_TOTAL;


SELECT FIRST_NAME, SALARY
FROM EMPLOYEES
ORDER BY 2 DESC;


--esto no tiene sentido
SELECT FIRST_NAME, MAX(SALARY)
FROM EMPLOYEES
GROUP BY FIRST_NAME;

--cONSULTAR CUANTOS EMPLEADOS TIENEN EL MISMO NOMBRE
SELECT FIRST_NAME, COUNT(*)
FROM EMPLOYEES
GROUP BY FIRST_NAME;

--Suma del salario por primer nombre
SELECT FIRST_NAME, sum(salary)
FROM EMPLOYEES
GROUP BY FIRST_NAME;

SELECT max(salary)
    FROM EMPLOYEES

select *
from employees
  where salary = (
    SELECT max(salary)
    FROM EMPLOYEES
  );

select *
from EMPLOYEES
where job_id in (1,3,5);

select *
from EMPLOYEES
where job_id in (select campo1
      from x);





--cantidad de facturas de una tabla de facturas
SELECT COUNT(*)
FROM FACTURAS;

--Porcentaje del salario de cada departamento con
  -- respecto al salario total de la empresa


SELECT B.DEPARTMENT_NAME,
       ROUND(SUM(SALARY)/
        (
          SELECT SUM(SALARY)
          FROM EMPLOYEES
        )*100,2)||'%' AS SALARIO_DEPARTAMENTO
FROM EMPLOYEES A
LEFT JOIN DEPARTMENTS B
ON (A.DEPARTMENT_ID = B.DEPARTMENT_ID)
GROUP BY B.DEPARTMENT_NAME;


SELECT SUM(SALARY)
FROM EMPLOYEES;

SELECT ROUND((4400/691416)*100,2) FROM DUAL;


--CANTIDAD DE EMPLEADOS CONTRATADOS POR MES
SELECT TO_CHAR(HIRE_DATE,'YYYY-MM') AS MES,
       COUNT(*) AS CANTIDAD_EMPLEADOS
FROM EMPLOYEES
GROUP BY TO_CHAR(HIRE_DATE,'YYYY-MM');

--CANTIDAD EMPLEADOS CONTRATADOS POR AÑO:
SELECT TO_CHAR(HIRE_DATE,'YYYY') AS MES,
       COUNT(*) AS CANTIDAD_EMPLEADOS
FROM EMPLOYEES
GROUP BY TO_CHAR(HIRE_DATE,'YYYY');

--CALCULAR EL PORCENTAJE O RAZON DE CRECIMIENTO
--EN LAS CONTRATACIONES DE EMPLEADOS DEL AÑO 2005
--CON RESPECTO AL AÑO ANTERIOR
((b-a)/a) * 100


--contrataciones del 2015
SELECT TO_CHAR(HIRE_DATE,'YYYY') AS MES,
       COUNT(*) AS CANTIDAD_EMPLEADOS
FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE,'YYYY') = '2005'
GROUP BY TO_CHAR(HIRE_DATE,'YYYY');


--CONTRATACIONES DEL 2004
SELECT TO_CHAR(HIRE_DATE,'YYYY') AS MES,
       COUNT(*) AS CANTIDAD_EMPLEADOS
FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE,'YYYY') = '2004'
GROUP BY TO_CHAR(HIRE_DATE,'YYYY');


SELECT ((
        (
          SELECT COUNT(*) AS CANTIDAD_EMPLEADOS
          FROM EMPLOYEES
          WHERE TO_CHAR(HIRE_DATE,'YYYY') = '2005'
          GROUP BY TO_CHAR(HIRE_DATE,'YYYY')
        )-(
          SELECT COUNT(*) AS CANTIDAD_EMPLEADOS
          FROM EMPLOYEES
          WHERE TO_CHAR(HIRE_DATE,'YYYY') = '2004'
          GROUP BY TO_CHAR(HIRE_DATE,'YYYY')
        ))/(
          SELECT COUNT(*) AS CANTIDAD_EMPLEADOS
          FROM EMPLOYEES
          WHERE TO_CHAR(HIRE_DATE,'YYYY') = '2004'
          GROUP BY TO_CHAR(HIRE_DATE,'YYYY')
        )) * 100 AS RESULTADO
FROM DUAL;